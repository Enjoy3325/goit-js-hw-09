{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MA7BWQ,SAASC,cAAc,QAE/BC,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAEC,iBACF,IAMYC,EAARF,EAAEG,OALJC,SACWf,EADHa,EACNb,MAASgB,MACDC,EADaJ,EACrBI,KAAQD,MACEE,EADSL,EACnBK,OAAUF,MAGdG,QAAQC,IAAI,CAAEpB,QAAOiB,OAAMC,WAE3B,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,IAC1BvB,EAAcuB,EAAGrB,GAAOsB,KAAKC,GAAWC,MAAMC,MAgBlD,IAAMF,EAAY,SAAAG,G,IAAG1B,EAAK0B,EAAL1B,MAAOD,EAAQ2B,EAAR3B,SAC1BH,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,QAEzDyB,EAAW,SAAAC,G,IAAG1B,EAAK0B,EAAL1B,MAAOD,EAAQ2B,EAAR3B,SACzBH,EAAA+B,OAAOG,QAAQ,sBAAuCD,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst formDelay = document.querySelector('form');\n\nformDelay.addEventListener('submit', onClictButtun);\n\nfunction onClictButtun(e) {\n  e.preventDefault();\n  const {\n    elements: {\n      delay: { value: delay },\n      step: { value: step },\n      amount: { value: amount },\n    },\n  } = e.target;\n  console.log({ delay, step, amount });\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i, delay).then(onResolve).catch(onReject);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nconst onResolve = ({ delay, position }) => {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\nconst onReject = ({ delay, position }) => {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\n// 1. Вызывается создание промисов с первой задержкой\n// 2. Вызываются промисы шаг * на текущий шаг по номеру\n//  + не забыть добавить значение первоночальной задержки\n//  Сделать механизм который будет вызывать функцию createPromise сколько будет нажиматься amount,\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","value","step","amount","console","log","i","then","$ce04d3a99e08e73b$var$onResolve","catch","$ce04d3a99e08e73b$var$onReject","param","Notify","success","concat","failure"],"version":3,"file":"03-promises.2d475b16.js.map"}